/*
Bank Customer Churn Analysis

Skills used: Joins, CTE's, Windows Functions, Aggregate Functions, Creating Views

*/

SELECT *
FROM PortfolioProject..CustChurn
WHERE Surname IS NOT NULL 


-- Find average creditscore by Gender and split by those who have a credit card vs. not
-- Do people with credit cards have a lower credit score?

SELECT Gender, HasCrCard, avg(creditscore)
FROM PortfolioProject..CustChurn
GROUP BY 1,2
ORDER BY 1,2;


-- Average Balance by Active Membership - Window functions
-- Finds the average balance of active vs inactive members per geography.

SELECT 
    Geography,
    IsActiveMember,
    ROUND(AVG(Balance) OVER(PARTITION BY Geography, IsActiveMember), 2) AS AvgBalance
FROM PortfolioProject..CustChurn;


-- Retention by Tenure
-- Show churn rate by Tenure (years with bank). Which tenure range has the highest churn?

SELECT 
    Tenure,
    COUNT(*) AS TotalCustomers,
    SUM(Exited) AS Churned,
    ROUND(100.0 * SUM(Exited)/COUNT(*), 2) AS ChurnRate
FROM PortfolioProject..CustChurn
GROUP BY Tenure
ORDER BY Tenure;



-- Top Customers by Balance
-- Rank customers by Balance within each geography using ROW_NUMBER() and return the top 5 per country.

WITH RankedBalances AS (
    SELECT 
        CustomerId,
        Geography,
        Balance,
        ROW_NUMBER() OVER(PARTITION BY Geography ORDER BY Balance DESC) AS rnk
   FROM PortfolioProject..CustChurn
)
SELECT * 
FROM RankedBalances
WHERE rnk <= 5;


-- Impact of Credit Card Ownership
-- Compare churn rates between customers with and without credit cards.

WITH ChurnByCard AS (
    SELECT 
        HasCrCard,
        COUNT(*) AS TotalCustomers,
        SUM(Exited) AS Churned
    FROM PortfolioProject..CustChurn
    GROUP BY HasCrCard
)
SELECT *,
       ROUND(100.0 * Churned/TotalCustomers, 2) AS ChurnRate
FROM ChurnByCard;

-- Product Penetration
-- For each geography, calculate the average number of products and see if customers with 3+ products are more likely to churn.

SELECT 
    Geography,
    AVG(NumOfProducts) AS AvgProducts,
    ROUND(100.0 * SUM(CASE WHEN NumOfProducts >= 3 AND Exited=1 THEN 1 ELSE 0 END) 
           / SUM(CASE WHEN NumOfProducts >= 3 THEN 1 ELSE 0 END), 2) AS ChurnRate_3PlusProducts
FROM PortfolioProject..CustChurn
GROUP BY Geography;

-- Gender-Based Analysis (Store as a view)
-- Is churn higher among male or female customers?

CREATE VIEW GenderChurn AS
SELECT 
    Gender,
    COUNT(*) AS TotalCustomers,
    SUM(Exited) AS Churned,
    ROUND(100.0 * SUM(Exited)/COUNT(*),2) AS ChurnRate
FROM PortfolioProject..CustChurn
GROUP BY Gender;


-- Retention Cohort by Age
-- group customers into 5-year age cohorts (20–24, 25–29, etc.) and calculate churn rate per cohort.

WITH AgeCohorts AS (
    SELECT 
        CustomerId,
        Age,
        Exited,
        CASE 
            WHEN Age < 20 THEN 'Under 20'
            WHEN Age BETWEEN 20 AND 29 THEN '20-29'
            WHEN Age BETWEEN 30 AND 39 THEN '30-39'
            WHEN Age BETWEEN 40 AND 49 THEN '40-49'
            WHEN Age BETWEEN 50 AND 59 THEN '50-59'
            WHEN Age BETWEEN 60 AND 69 THEN '60-69'
            ELSE '70+' 
        END AS AgeCohort
    FROM PortfolioProject..CustChurn
)
SELECT 
    AgeCohort,
    COUNT(*) AS TotalCustomers,
    SUM(Exited) AS Churned,
    ROUND(100.0 * SUM(Exited)/COUNT(*), 2) AS ChurnRate
FROM AgeCohorts
GROUP BY AgeCohort
ORDER BY MIN(Age);


-- Churn Prediction Factors
-- Build a summary table showing churn rate segmented by: HasCrCard, IsActiveMember, NumOfProducts

SELECT 
    HasCrCard,
    IsActiveMember,
    NumOfProducts,
    COUNT(*) AS TotalCustomers,
    SUM(Exited) AS Churned,
    ROUND(100.0 * SUM(Exited)/COUNT(*),2) AS ChurnRate
FROM PortfolioProject..CustChurn
GROUP BY HasCrCard, IsActiveMember, NumOfProducts
ORDER BY ChurnRate DESC;



-- Geography vs Salary Tier Analysis
-- Bucket customers into salary quartiles and analyze churn across quartiles by geography.

WITH SalaryQuartiles AS (
    SELECT *,
           NTILE(4) OVER(ORDER BY EstimatedSalary) AS SalaryQuartile
    FROM PortfolioProject..CustChurn
)
SELECT 
    Geography,
    SalaryQuartile,
    COUNT(*) AS TotalCustomers,
    SUM(Exited) AS Churned,
    ROUND(100.0 * SUM(Exited)/COUNT(*),2) AS ChurnRate
FROM SalaryQuartiles
GROUP BY Geography, SalaryQuartile
ORDER BY Geography, SalaryQuartile;



